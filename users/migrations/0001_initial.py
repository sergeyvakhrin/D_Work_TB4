# Generated by Django 5.1.3 on 2024-12-21 14:26

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Referral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "referral",
                    models.CharField(
                        db_index=True,
                        max_length=6,
                        unique=True,
                        verbose_name="Реферальная ссылка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Реферал",
                "verbose_name_plural": "Реферал",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        db_index=True,
                        help_text="Укажите номер телефона",
                        max_length=35,
                        unique=True,
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        db_index=True,
                        help_text="Укажите почту",
                        max_length=255,
                        null=True,
                        verbose_name="Почта",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Укажите имя",
                        max_length=50,
                        null=True,
                        verbose_name="Имя",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Укажите фамилию",
                        max_length=50,
                        null=True,
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        db_index=True,
                        help_text="Загрузите фото",
                        null=True,
                        upload_to="users/avatar",
                        verbose_name="Фото",
                    ),
                ),
                (
                    "sms_code",
                    models.CharField(
                        blank=True, db_index=True, max_length=4, null=True
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "self_referral",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="self_referral",
                        to="users.referral",
                        verbose_name="Реферал",
                    ),
                ),
                (
                    "user_referral",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="user_referral",
                        to="users.referral",
                        verbose_name="Реферальная ссылка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
